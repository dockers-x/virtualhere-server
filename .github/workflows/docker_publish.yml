name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
  schedule:
    # Weekly build to get latest VirtualHere binaries
    - cron: "0 2 * * 0"

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  REGISTRY_IMAGE: virtualhere-server

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            dockerfile: Dockerfile
            suffix: amd64
          - platform: linux/arm64
            dockerfile: Dockerfile.arm64
            suffix: arm64
          - platform: linux/arm/v7
            dockerfile: Dockerfile.arm
            suffix: arm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest-${{ matrix.suffix }},enable={{is_default_branch}}
            type=raw,value=release-${{ matrix.suffix }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=branch,suffix=-${{ matrix.suffix }}
            type=ref,event=pr,suffix=-${{ matrix.suffix }}
            type=schedule,pattern=weekly-{{date 'YYYYMMDD'}}-${{ matrix.suffix }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.suffix }}
          cache-to: type=gha,mode=max,scope=${{ matrix.suffix }}

      - name: Export digest
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.suffix }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest for latest
        if: github.ref == 'refs/heads/main'
        run: |
          # Docker Hub
          docker buildx imagetools create -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:latest \
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:latest-amd64 \
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:latest-arm64 \
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:latest-arm

          # GitHub Container Registry
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest \
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest-arm64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest-arm

      - name: Create multi-arch manifest for release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}

          # Docker Hub
          docker buildx imagetools create -t ${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:release \
            -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:${VERSION} \
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:release-amd64 \
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:release-arm64 \
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:release-arm

          # GitHub Container Registry
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:release \
            -t ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:${VERSION} \
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:release-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:release-arm64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:release-arm

      - name: Inspect multi-arch images
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker buildx imagetools inspect ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:latest
            docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest
          fi

          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            docker buildx imagetools inspect ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REGISTRY_IMAGE }}:release
            docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:release
          fi

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs:
      - merge
    strategy:
      matrix:
        arch: [amd64, arm64, arm]
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE }}:latest-${{ matrix.arch }}"
          format: "sarif"
          output: "trivy-results-${{ matrix.arch }}.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results-${{ matrix.arch }}.sarif"
